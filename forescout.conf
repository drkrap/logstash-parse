input {
    udp {
        host => "0.0.0.0"
        port => 1414
    }
}

filter {
    if "System statistics" in [message] {
        grok {
            match => {"message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}\[%{INT:pid}\]: %{GREEDYDATA:sys_stats}"}
            overwrite => ["message"]
        }
    } else if "COMMAND" in [message] {
        grok {
            match => {"message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}: %{DATA:identificador} : TTY=%{DATA:tty} ; PWD=%{DATA:pwd} ; USER=%{DATA:user} ; COMMAND=%{GREEDYDATA:command}"}
            overwrite => ["message"]
        }
    } else if "Policy Log" in [message] {
        grok {
            match => { "message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}\[%{INT:pid}\]: NAC Policy Log: %{GREEDYDATA:log_message}"}
        }
        grok {
            match => {"log_message" => "Source: %{IPV4:endpoint}, Rule: Policy \"%{DATA:Policy}\" , Match: \"%{DATA:Match}\", Category: %{DATA:Category}, Details: %{GREEDYDATA:Details}. Reason: %{GREEDYDATA:Reason}. Duration: %{GREEDYDATA:Duration}"}           
            #source => "log_message"
            #field_split => ","
            #value_split => ": "
        }
    } else if ": Uptime " in [message] {
        grok {
            match => { "message" => "<%{POSINT:syslog_priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}\[%{POSINT:pid}\]: Uptime %{NUMBER:uptime} seconds"}
        }
    } else if " changed Action." in [message]{
        grok {
            match => {"message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}\[%{INT:pid}\]: User %{WORD:user} session %{NUMBER:session} changed Action\. Details: %{GREEDYDATA:details}" }
        }
    } else if "changed Tab" in [message]{
        grok{
            match => {"message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{WORD:hostname} %{WORD:program}\[%{INT:pid}\]: User %{DATA:user} session %{NUMBER:session} changed %{DATA:action}. Details: %{GREEDYDATA:details}"}
        }
        }else {
        grok {
            match => {"message" => "<%{INT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{WORD:facility} %{SYSLOGPROG:program}: %{GREEDYDATA:message}"}
            overwrite => ["message"]
        }
    }

    if "_grokparsefailure" in [tags] {
        # Handle parse failure if needed
    } else {
        mutate {
            remove_field => ["@timestamp","@version","message","event","priority","priotity"]
        }
        date {
            match => ["timestamp", "MMM dd HH:mm:ss"]
            timezone => "America/Lima"
            target => "@timestamp"
        }
        mutate{
            remove_field => ["timestamp"]
        }
    } 
}

output {
    elasticsearch {
        hosts => "https://192.168.1.100:9200"
        index => "forescout-%{+YYYY.MM.dd}"
        api_key => "zCwKNI0BDQp2QbfG4PaF:mEqQTRu6R1Cj0WwVLkX8TA"
        ssl => true
        cacert => "/etc/logstash/http_ca.crt"
    }
    #stdout{}
}
